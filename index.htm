<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/html">

<head>
    <link rel="stylesheet" type="text/css" href="style.css" />
    <link href="http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css" rel="stylesheet"  type='text/css'>
    <script src="jquery.js" type="text/javascript"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>
    <script type="text/javascript" src="login.js"></script>
    <script type="text/javascript" src="SettingsPage.js"></script>
    <script type="text/javascript" src="register.js"></script>
    $.noConflict();
</head>

<body>
    <!--header-->
    <header>
            <!--complete header here-->
    </header>

    <nav class="menu">
        <li id="loggedInUser">Hi <b>Stranger</b>!</li>
        <li><a herf="#" onclick="toggle('Welcome')">Welcome</a></li>
        <li><a herf="#" onclick="toggle('Register')">Register</a></li>
        <li><a herf="#" onclick="toggle('Login')">Login</a></li>
        <li><a herf="#" onclick="toggle('Settings')">Settings</a></li>
        <li><a herf="#" onclick="toggle('About')">About</a></li>
    </nav>

    <div class="content" id="Welcome" style="display:block;">
        <br>
        <br>
        <button id="welcomeButtonRegister" type="button" onclick="toggle('Register')">Register </button>
        <button id="welcomeButtonLogin" type="button" onclick="toggle('Login')">Log-In!</button>
        <br>
        <br>
    </div>
    <div class="content" id="Register" style="display:none;">
        <form  method="post" class="registerform"  id="register_form">
            <div class=whitetop>
                <h3> Register information</h3>
            </div>
            <input class="name" type="text" name="username" placeholder="Username" required >
            <br>
            <input class="mail" type="email" name="email" placeholder="E-mail address" required >
            <br>
            <input class="name" type="text" name="firstName" placeholder="First Name" required >
            <br>
            <input class="name" type="text" name="lastName" placeholder="Last Name" required >
            <br>
            <input class="pass" type="password" name="password" placeholder="Password" required>
            <br>
            <input class="date" type="Date" name="date" required>
            <br>
            <input class="submit" type="submit" name="submit"  onclick="validateRegister(); return false;" value="Register">
        </form>

    </div>
    <div class="content" id="Login" style="display:none;">
        <form method="post" class="loginform">
            <div class=whitetop>
                <h3> Login information</h3>
            </div>

            <input class="name" type="text" id="username" placeholder="username" required >
            <br>
            <input class="pass" type="password" id="password" placeholder="password" required>
            <br>
            <input class="submit" id="submitLogin" type="button" onclick="validateLogin()" value="Login">

        </form>
        <br>
    </div>
    <div class="content" id="Settings" style="display:none;">
        <container class="settingForm">
            <div class="whitetop">
                <h3> Settings </h3>
            </div>
            <table style="display: inline-block" id="settingsTable">>
                <br>
                    <tr>
                        <th> Number of balls: </th>
                        <th>
                            <div class="range-slider">
                                <input class="range-slider__range" type="range" value="75" min="50" max="90" onchange="showRangeSliderValue(this.value)">
                                <span class="range-slider__value">75</span>
                            </div>
                        </th>
                    </tr>
                <br>
                <tr>
                    <th> Game duration:</th>
                    <th><input type="text" name="gameTime" placeholder="Minimum 60"> Seconds</th>
                </tr>
                <br>
                <tr>
                    <th>Number of monsters:</th>
                    <th> <select name="numMonsters">
                            <option selected>1</option>
                            <option >2</option>
                            <option >3</option>
                    </select>
                    </th>
                </tr>
                <br>
                <tr>
                    <th></th>
                    <th> 5 points <input type="color" name="5ptColor" value="#948cea"> </th>
                </tr>
                <br>
                <tr>
                    <th> Game balls color :</th>
                    <th> 15 points <input type="color" name="15ptColor" value="#eda3c1"> </th>
                <tr>
                    <th></th>
                    <th> 25 points <input type="color" name="25ptColor" value="#8dddb8"> </th>
                </tr>
            </table>
            <table id="keysTable" style="float:right">
                <tr>
                    <th></th>
                    <th>
                        <input class="keys" type="button" value="Up" width="1px" height="10px" onclick="catchUserChoise(this)">
                        <span id="keyUp"></span>
                    </th>
                    <th></th>
                </tr>
                <tr>
                    <th>
                        <span id="keyLeft"></span>
                        <input class="keys" value="Left" type="button" onclick="catchUserChoise(this)"></th>
                    <th><img src="Images/4ArrowKeys.PNG" height="100" width="150"></th>
                    <th>
                        <input class="keys" value="Right" type="button" width="1px" height="10px" onclick="catchUserChoise(this)">
                        <span id="keyRight"></span>
                    </th>
                </tr>
                <tr>
                    <th></th>
                    <th>
                        <input class="keys" value="Down" type="button" width="1px" height="10px" onclick="catchUserChoise(this)">
                        <span id="keyDown"></span>
                    </th>
                    <th></th>
                </tr>
            </table>
            <input type="button" value="Random" onclick="randomizeAll()">
            <input type="button" value="Let's play!" onclick="activateGame()">
        </container>
    </div>
    <div class="content" id="About" style="display:none;">
        hi5
    </div>
    <div class="content" id="Game" style="display:none;">
        <br>
        <br>
        <ul class="image-gallery-lifes">
            <li><c>Lifes: </c></li>
            <li> <img src="Images/pacmanLife.PNG" height="20px" width="20px"></li>
            <li> <img src="Images/pacmanLife.PNG" height="20px" width="20px"></li>
            <li> <img src="Images/pacmanLife.PNG" height="20px" width="20px"></li>
        </ul>
        <c>SCORE: </c>
        <input id="lblScore" type="text"/>
        <br/>
        <d>TIME:</d>
        <input id="lblTime" type="text"/>
        <br/>
        <br/>
        <canvas id="canvas" height="600" width="1200"></canvas>
        <br/>
        <input type="button" value="New Game!" onclick="if(confirm('Are you sure you want to start a new game?')) toggle('Settings')">
    </div>

    <footer>
            <!--complete footer here-->
    </footer>

<script type="text/javascript">
    var context = canvas.getContext("2d");
    var shape = new Object();
    var board;
    var score;
    var pacLife;
    var pac_color;
    var start_time;
    var time_elapsed;
    var interval;
    var pacDirection;
    var currentUser;
    var users = ['a'];
    var passwords =  ['a'];
    var monsters;
    var backgroundAudio= new Audio("game_background_music.mp3");
    backgroundAudio.addEventListener('ended', function() {
        this.currentTime = 0;
        this.play();
    }, false);
    //monster class
    class monster{
        constructor(x,y,url){
            this.x= x;
            this.y=y;
            this.img = new Image();
            this.img.src = url;
        }
    }

    function Start() {
        board = new Array();
        monsters = [];
        score = 0;
        pac_color = "yellow";
        pacLife=3;
        pacDirection =1;
        var cnt = 200;
        var food_remain = $('.range-slider input[type=range]').val();
        var fivePointFood= Math.floor(0.6* food_remain);
        var fifteenPointFood= Math.floor(0.3* food_remain);
        var twentyFivePointFood= Math.ceil(0.1* food_remain);
        // 0=empty 1= 25-Food, 2=pacman, 3=15-Food, 4=wall, 5=5-Food, 6=life
        var pacman_remain = 1;
        var monster_remain = $('select[name=numMonsters]').val();
        initiateMonsters();
        start_time = new Date();
        for (var i = 0; i < 20; i++) {
            board[i] = new Array();
            //put obstacles in (i=3,j=3) and (i=3,j=4) and (i=3,j=5), (i=6,j=1) and (i=6,j=2)
            for (var j = 0; j < 10; j++) {
                if (checkWalls(i,j)){
                    board[i][j] = 4;
                }
                else if ((i===16 && j===4)|| (i===6 && j===9)){
                    board[i][j] = 6;
                }

                // else if (monster_remain  > 0 && ((i===0 && j===0) || (i===0 && j===9)|| (i===9 && j===0)) ){
                //         board[i][j] = 6;
                //         monster_remain--;
                // }
                else {
                    var randomNum = Math.random();
                    if (randomNum <= 1.0 * food_remain / cnt) {
                        food_remain--;
                        var foodColored=false,secondRand;
                        while(!foodColored) {
                            secondRand= Math.random();
                            if (secondRand <= 0.1 && twentyFivePointFood > 0) {
                                board[i][j] = 1;
                                twentyFivePointFood--;
                                foodColored=true;
                            } else if (secondRand > 0.1 && secondRand <= 0.4 && fifteenPointFood > 0) {
                                board[i][j] = 3;
                                fifteenPointFood--;
                                foodColored=true;
                            } else if (secondRand > 0.4 && fivePointFood > 0) {
                                board[i][j] = 5;
                                fivePointFood--;
                                foodColored=true;
                            }
                        }
                    } else if (randomNum < 1.0 * (pacman_remain + food_remain) / cnt) {
                        shape.i = i;
                        shape.j = j;
                        pacman_remain--;
                        board[i][j] = 2;
                    } else {
                        board[i][j] = 0;
                    }
                    cnt--;
                }
            }
        }
        while (food_remain > 0) {
            var emptyCell = findRandomEmptyCell(board);
            board[emptyCell[0]][emptyCell[1]] = 1;
            food_remain--;
        }
        keysDown = {};
        addEventListener("keydown", function (e) {
            keysDown[e.code] = true;
        }, false);
        addEventListener("keyup", function (e) {
            keysDown[e.code] = false;
        }, false);
        interval = setInterval(UpdatePosition, 120);
    }

    function initiateMonsters(){

        monsters.push(new monster(0,0,"Images/greenMonster.jpg"));
        monsters.push(new monster(0,9,"Images/yellowMonster.png"));
        monsters.push(new monster(19,0,"Images/redMonster.png"));

        // var monster1 = new Image();
        // monster1.src=("Images/greenMonster.jpg");
        // var monster2 = new Image();
        // monster2.src=("Images/yellowMonster.png");
        // var monster3 = new Image();
        // monster3.src="Images/redMonster.png";
    }
    function findRandomEmptyCell(board) {
        var i = Math.floor((Math.random() * 9) + 1);
        var j = Math.floor((Math.random() * 9) + 1);
        while (board[i][j] !== 0) {
            i = Math.floor((Math.random() * 9) + 1);
            j = Math.floor((Math.random() * 9) + 1);
        }
        return [i, j];
    }

    /**
     * @return {number}
     */
    function GetKeyPressed() {
        if (keysDown[$('#keyUp').text()]) {
            return 1;
        }
        if (keysDown[$('#keyDown').text()]) {
            return 2;
        }
        if (keysDown[$('#keyLeft').text()]) {
            return 3;
        }
        if (keysDown[$('#keyRight').text()]) {
            return 4;
        }
    }

    function Draw() {
        context.clearRect(0, 0, canvas.width, canvas.height); //clean board
        lblScore.value = score;
        lblTime.value = time_elapsed;
        var monsterCount=0;
        for (var i = 0; i < 20; i++) {
            for (var j = 0; j < 10; j++) {
                var center = new Object();
                center.x = i * 60 + 30;
                center.y = j * 60 + 30;
                if (board[i][j] === 2) {
                    context.beginPath();
                    /* draw packman according to it's direction */
                    context.arc(center.x, center.y, 20, ((1.65+0.5*pacDirection) % 2) * Math.PI, ((1.35+0.5*pacDirection)%2)* Math.PI);
                    context.lineTo(center.x, center.y);
                    context.fillStyle = pac_color; //color
                    context.fill();
                    context.beginPath();
                    /* change eye drawing based on pacman direction */
                    if(pacDirection==0)
                        context.arc(center.x + 15, center.y - 5, 3, 0, 2 * Math.PI); // circle
                    else if(pacDirection==1)
                        context.arc(center.x + 5, center.y - 15, 3, 0, 2 * Math.PI); // circle
                    else if (pacDirection==2)
                        context.arc(center.x - 15, center.y + 5, 3, 0, 2 * Math.PI); // circle
                    else if (pacDirection==3)
                        context.arc(center.x - 5, center.y - 15, 3, 0, 2 * Math.PI); // circle
                    context.fillStyle = "black"; //color
                    context.fill();
                    // drawPackman();
                // } else if (board[i][j] === 6){
                //     context.beginPath();
                //     if(monsterCount===0){
                //         monsterCount++;
                //         context.drawImage(monster1,i*60,j*60,60,60);
                //     }
                //     else if(monsterCount===1){
                //         monsterCount++;
                //         context.drawImage(monster2,i*60,j*60,60,60);
                //     }
                //     else if (monsterCount===2){
                //         monsterCount++;
                //         context.drawImage(monster3,i*60,j*60,60,60);
                //     }

                }
                else if (board[i][j] === 1 || board[i][j] === 3 || board[i][j] ===5) {
                    context.beginPath();
                    context.arc(center.x, center.y, 7, 0, 2 * Math.PI); // circle
                    if(board[i][j]===1) {
                        context.fillStyle = $('input[name=25ptColor]').val(); //color
                    }
                    else if (board[i][j] === 3)
                        context.fillStyle = $('input[name=15ptColor]').val();
                    else if(board[i][j] === 5)
                        context.fillStyle = $('input[name=5ptColor]').val();
                    context.fill();
                } else if (board[i][j] === 4) {
                    context.beginPath();
                    context.rect(center.x -30,center.y-30, 60, 60);
                    context.fillStyle = "lightskyblue"; //color
                    context.fill();
                }
                else if (board[i][j]===6){
                    var img= new Image();
                    img.src="Images/heart.PNG";
                    context.drawImage(img,i*60+24,j*60+30,20,20);
                }
            }
        }
    }

    function UpdatePosition() {
        board[shape.i][shape.j] = 0;
        var gameTime= $('input[name=gameTime]').val();
        var x = GetKeyPressed();
        if (x === 1) { //ArrowUp
            if (shape.j > 0 && board[shape.i][shape.j - 1] !== 4) {
                shape.j--;
                pacDirection=0;
            }
        }
        if (x === 2) { //ArrowDown
            if (shape.j < 9 && board[shape.i][shape.j + 1] !== 4) {
                shape.j++;
                pacDirection=2;
            }
        }
        if (x === 3) { //ArrowLeft
            if (shape.i > 0 && board[shape.i - 1][shape.j] !== 4) {
                shape.i--;
                pacDirection=3;
            }
        }
        if (x === 4) { //ArrowRight
            if (shape.i < 20 && board[shape.i + 1][shape.j] !== 4) {
                shape.i++;
                pacDirection=1;
            }
        }
        if (board[shape.i][shape.j] === 1) {
            score+=25;
        }
        if (board[shape.i][shape.j] === 3){
            score+=15;
        }
        if (board[shape.i][shape.j] === 5){
            score+=5;
        }
        if (board[shape.i][shape.j] === 6){ //pacman got life
            $(".image-gallery-lifes").append('<li> <img src="Images/pacmanLife.PNG" height="20px" width="20px"></li>');
            pacLife++;
        }
        board[shape.i][shape.j] = 2;
        var currentTime = new Date();
        time_elapsed = (currentTime - start_time) / 1000;
        // if (score >= 20 && time_elapsed <= 10) {
        //     pac_color = "green";
        // }

        //handle end of game
        if (pacLife=== 0) {
            window.clearInterval(interval);
            backgroundAudio.pause();
            alert("You Lost!");
        } else if(time_elapsed>= gameTime) {
            window.clearInterval(interval);
            backgroundAudio.pause();
            if( score < 150)
                alert("You can do better than "+score+" points");
            else
                alert("We have a Winner!!!")
        } else {
            Draw();
        }
    }
    function checkWalls(i,j){
        if ((i === 3 && j === 3) || (i === 3 && j === 4) || (i === 3 && j === 5) || (i === 6 && j === 1) || (i === 6 && j === 2)
            || (i === 6 && j === 4)|| (i === 6 && j === 5)) {
            return true;
        }
        else return false;
    }


    function toggle(target){ 
        var menuElements= document.getElementsByClassName("content");
        var targ = document.getElementById(target);          
        // hide all
        for(var i=0;i<menuElements.length;i++){
            menuElements[i].style.display = "none";
        }
        // toggle current
        targ.style.display = "block";
        if(target === 'Game'){
            backgroundAudio.play();
        }
        else {
            backgroundAudio.pause();
            backgroundAudio.currentTime=0;
        }
    }


</script>
</body>

</html>